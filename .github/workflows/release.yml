env:
  NAME: ulid
  PKG_NAME: pgx_ulid
name: Release
on:
  push:
    tags: [v*]
jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
  build-linux-gnu:
    name: Build & Release for linux
    needs:
      - create-release
    strategy:
      matrix:
        postgres: [14, 15]
        box:
          - runner: ubuntu-latest
            arch: amd64
          - runner: arm-runner
            arch: arm64
    runs-on: ${{ matrix.box.runner }}
    timeout-minutes: 45
    env:
      PKG_DIR: ${{ env.NAME }}-${{ github.ref_name }}-pg${{ matrix.postgres }}-${{ matrix.box.arch }}-linux-gnu
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.68.0
          target: ${{ matrix.target }}
          override: true
      - name: Install dependencies
        run: |
          # Add postgres package repo
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget -qO- https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo tee /etc/apt/trusted.gpg.d/pgdg.asc &>/dev/null

          sudo apt-get update
          sudo apt-get install -y --no-install-recommends git build-essential libpq-dev curl libreadline6-dev zlib1g-dev pkg-config cmake
          sudo apt-get install -y --no-install-recommends libreadline-dev zlib1g-dev flex bison libxml2-dev libxslt-dev libssl-dev libxml2-utils xsltproc ccache
          sudo apt-get install -y --no-install-recommends clang libclang-dev gcc tree

          # Install requested postgres version
          sudo apt install -y postgresql-${{ matrix.postgres }} postgresql-server-dev-${{ matrix.postgres }} -y

          # Ensure installed pg_config is first on path
          export PATH=$PATH:/usr/lib/postgresql/${{ matrix.postgres }}/bin

          cargo install cargo-pgx --version 0.7.3 --locked
          cargo pgx init --pg${{ matrix.postgres }}=/usr/lib/postgresql/${{ matrix.postgres }}/bin/pg_config
      - name: Build artifacts
        run: |
          # selects the pgVer from pg_config on path
          # https://github.com/tcdi/pgx/issues/288
          cargo pgx package --no-default-features --features pg${{ matrix.postgres }}

          # Create installable package
          mkdir archive
          cp `find target/release -type f -name "${{ env.NAME }}*"` archive

          # Copy files into directory structure
          mkdir -p ${{ env.PKG_DIR }}/usr/lib/postgresql/lib
          mkdir -p ${{ env.PKG_DIR }}/var/lib/postgresql/extension
          cp archive/*.so ${{ env.PKG_DIR }}/usr/lib/postgresql/lib
          cp archive/*.control ${{ env.PKG_DIR }}/var/lib/postgresql/extension
          cp archive/*.sql ${{ env.PKG_DIR }}/var/lib/postgresql/extension

          # symlinks to Copy files into directory structure
          mkdir -p ${{ env.PKG_DIR }}/usr/lib/postgresql/${{ matrix.postgres }}/lib
          cd ${{ env.PKG_DIR }}/usr/lib/postgresql/${{ matrix.postgres }}/lib
          cp -s ../../lib/*.so .
          cd ../../../../../..

          mkdir -p ${{ env.PKG_DIR }}/usr/share/postgresql/${{ matrix.postgres }}/extension
          cd ${{ env.PKG_DIR }}/usr/share/postgresql/${{ matrix.postgres }}/extension

          cp -s ../../../../../var/lib/postgresql/extension/${{ env.NAME }}.control .
          cp -s ../../../../../var/lib/postgresql/extension/${{ env.NAME }}*.sql .
          cd ../../../../../..

          # Create install control file
          extension_version=${{ github.ref_name }}
          # strip the leading v
          deb_version=${extension_version:1}

          mkdir -p ${{ env.PKG_DIR }}/DEBIAN
          touch ${{ env.PKG_DIR }}/DEBIAN/control
          echo 'Package: ${{ env.PKG_NAME }}' >> ${{ env.PKG_DIR }}/DEBIAN/control
          echo 'Version:' ${deb_version} >> ${{ env.PKG_DIR }}/DEBIAN/control
          echo 'Architecture: ${{ matrix.box.arch }}' >> ${{ env.PKG_DIR }}/DEBIAN/control
          echo 'Maintainer: supabase' >> ${{ env.PKG_DIR }}/DEBIAN/control
          echo 'Description: A PostgreSQL extension' >> ${{ env.PKG_DIR }}/DEBIAN/control

          # Create deb package
          sudo chown -R root:root ${{ env.PKG_DIR }}
          sudo chmod -R 00755 ${{ env.PKG_DIR }}
          sudo dpkg-deb --build --root-owner-group ${{ env.PKG_DIR }}
      - name: Upload artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ env.PKG_DIR }}.deb
          asset_name: ${{ env.PKG_DIR }}.deb
          asset_content_type: application/vnd.debian.binary-package
